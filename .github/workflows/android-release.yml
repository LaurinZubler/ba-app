name: Android Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test-core:
    name: Test upsi-core
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: upsi-core
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'
          cache: 'gradle'

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: upsi-core/pubspec.yaml
          cache: true

      - name: get dependencies
        run: flutter pub get

      - name: generate l10n files
        run: flutter gen-l10n

      - name: run build_runner
        run: dart run build_runner build

      - name: run tests
        run: flutter test

  test-user:
    name: Test upsi-user
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: upsi-user
    needs: test-core
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'
          cache: 'gradle'

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: upsi-user/pubspec.yaml
          cache: true

      - name: create .env file
        run: echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" > .env

      - name: get dependencies
        run: flutter pub get

      - name: generate l10n files
        run: flutter gen-l10n

      - name: run build_runner
        run: dart run build_runner build && cd ../upsi-core && dart run build_runner build

      - name: run tests
        run: flutter test

  build-tester:
    name: Build upsi-tester
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: upsi-tester
    needs: test-user
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: create version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1

      - name: update version in pubspec
        run: sed -i 's/99.99.99+99/${{ steps.gitversion.outputs.nuGetVersion }}+${{ github.run_number }}/g' pubspec.yaml

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'
          cache: 'gradle'

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: upsi-tester/pubspec.yaml
          cache: true

      - name: create .env file
        run: echo "{dummy=data}" > .env

      - name: get dependencies
        run: flutter pub get

      - name: generate l10n files
        run: flutter gen-l10n

      - name: run build_runner
        run: dart run build_runner build && cd ../upsi-core && dart run build_runner build

      - name: build app
        run: flutter build appbundle

      - name: rename aab
        run: mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/upsi-tester.aab

  build-user:
    name: Build upsi-user
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: upsi-user
    needs: build-tester
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: create version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1

      - name: update version in pubspec
        run: sed -i 's/99.99.99+99/${{ steps.gitversion.outputs.nuGetVersion }}+${{ github.run_number }}/g' pubspec.yaml

      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'
          cache: 'gradle'

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version-file: upsi-user/pubspec.yaml
          cache: true

      - name: create .env file
        run: echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" > .env

      - name: get dependencies
        run: flutter pub get

      - name: generate l10n files
        run: flutter gen-l10n

      - name: run build_runner
        run: dart run build_runner build && cd ../upsi-core && dart run build_runner build

      - name: build app
        run: flutter build appbundle

      - name: rename aab
        run: mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/upsi-user.aab

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-user
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: create version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1

      - name: create tag
        uses: rickstaa/action-create-tag@v1
        id: tag
        with:
          tag: ${{ steps.gitversion.outputs.nuGetVersion }}
          tag_exists_error: false

      - name: release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "upsi-user/build/app/outputs/bundle/release/upsi-user.aab,upsi-tester/build/app/outputs/bundle/release/upsi-tester.aab"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.gitversion.outputs.nuGetVersion }}
